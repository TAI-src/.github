on:
  workflow_call:
    inputs:
      docker-service:
        required: true
        type: string
      lint-src:
        required: true
        type: string

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Build environment
        run: |
          ls -l
          cd docker
          touch .env
          docker compose up ${{ inputs.docker-service }}
      - name: Test with pytest
        timeout-minutes: 5
        run: |
          docker compose -f docker/docker-compose.yml run ${{ inputs.docker-service }} bash -c "python -m pytest -v -s --color=yes"
          
  formatting:
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository and create PR
      contents: write
      pull-requests: write
    outputs:
        is_formatted: ${{ steps.action_black.outputs.is_formatted }}
    steps:
      - uses: actions/checkout@v4
      - name: Check files using the black formatter
        uses: rickstaa/action-black@v1
        id: action_black
        with:
          black_args: ". -t py37 -t py312"
      - name: Create Pull Request
        if: steps.action_black.outputs.is_formatted == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "${{ env.BRANCH_NAME }} Format Python code with psf/black push"
          commit-message: ":art: Format Python code with psf/black"
          body: |
            There appear to be some python formatting errors in ${{ github.sha }}. This pull request
            uses the [psf/black](https://github.com/psf/black) formatter to fix these issues.
          base: ${{ github.head_ref }} # Creates pull request onto pull request or commit branch
          branch: black/${{ env.BRANCH_NAME }}

  linting:
    runs-on: ubuntu-latest
    needs: formatting
    if: needs.formatting.outputs.is_formatted != 'true' #Only run if formatting is happy
    steps:
      - uses: actions/checkout@v4
      - name: Python Linter
        uses: sunnysid3up/python-linter@master
        with:
          source: ${{ inputs.lint-src }}
          strict: "low"
          pylint-options: "--disable=W0511" #Disables (fix-me) generated from #TODOs
          mypy-options: "--ignore-missing-imports --show-error-codes"
