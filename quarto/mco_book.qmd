---
title: "MCO Book example"
format:
  html:
    code-fold: true
jupyter: python3
---

Scalarisation example Test

```{python}
#| label: fig-scale
#| fig-cap: "Scalarisation example"

# x and y given as array_like objects
import plotly.graph_objects as go
import numpy as np

fig = go.Figure()

pf_points = [(x, 1/x**2) for x in range(1,4)]
pf_points += [(x, 1/x**2) for x in [1.2,1.5]]
nd_points = [(x-0.2, 1/(x-0.5)**2-0.05) for x in [2]]
points = pf_points + nd_points
px = [x for x,y in points]
py = [y for x,y in points]
fig.add_trace(
  go.Scatter(visible=True, x=px, y=py, mode="markers")
)
s = 0.75
steps = []
for x in np.arange(0.9, 3.1, 0.05):
  y = 1/x**2
  grad = -2/x**3
  d = x-s
  tx = [x-d, x-y/grad]
  ty = [y-d*grad, 0]
  fig.add_trace(
    go.Scatter(visible=False, x=tx, y=ty)
  )
  traces = [len(fig.data)-1]
  if round(x,2) in [pf_x for pf_x,_ in pf_points]:
    fig.add_trace(
      go.Scatter(visible=False, x=[x], y=[y], mode="markers")
    )
    traces+= [len(fig.data)-1]
  steps.append({"grad": grad, "traces": traces})

# create and add slider
for i, meta_data in enumerate(steps):
  step = dict(
    method="update",
    args = [{"visible": [False]*len(fig.data)}],
    #label=f"{meta_data['grad']:.2f}",
    label=meta_data["grad"],
    value= meta_data["grad"],
  )
  for trace in meta_data["traces"]:
    step["args"][0]["visible"][trace] = True
  step["args"][0]["visible"][0] = True
  steps[i] = step

sliders = [dict(
    active=2,
    currentvalue={"prefix": "Gradient: ", "font": {"color": "black"}},
    pad={"t": 50},
    steps=steps,
    tickcolor= "white",
    font={
    "color": "white"
    },
)]
# Make step 10 visible
vis_step = steps[2]
for i, trace in enumerate(vis_step["args"][0]["visible"]):
  fig.data[i].visible = trace


fig.update_layout(
    sliders=sliders
)
fig.update_layout(yaxis_range=(0.02, 1.48))
fig.update_layout(xaxis_range=(0.77, 3.5))
fig.update_layout(showlegend=False)
fig.show()
```

